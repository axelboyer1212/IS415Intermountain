@model IntermountainHealth.Models.PatientFormModel

@{
    if (Model.IsEdit)
    {
        ViewBag.PageTitle = "Edit Patient";
    }
    else
    {
        ViewBag.PageTitle = "Add Patient";
    }
    ViewBag.Title = "Form";

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    @*<div class="form-group">
            @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group" style="font-size:2em;">
        @Html.LabelFor(model => model.EstimatedHours, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-12" })
        <div class="col-lg-8 col-md-8 col-sm-12" style="margin-top: 8px;">
            @Math.Round(Model.EstimatedHours, 1)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IsAbnormal, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-12" })
        <div class="col-lg-8 col-md-8 col-sm-12">
            <div class="checkbox" style="margin-left:25px;">
                @Html.EditorFor(model => model.IsAbnormal)
                @Html.ValidationMessageFor(model => model.IsAbnormal, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Difficulty, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-12" })
        <div class="col-lg-8 col-md-8 col-sm-12">
            @Html.EditorFor(model => model.Difficulty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Difficulty, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Model.IsEdit)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.PatientIdentifier, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-12" })
            <div class="col-lg-8 col-md-8 col-sm-12">
                @Html.EditorFor(model => model.PatientIdentifier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PatientIdentifier, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Shift, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-12" })
            <div class="col-lg-8 col-md-8 col-sm-12">
                @Html.DropDownListFor(model => model.Shift, Model.ShiftList(), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Shift, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ActualHours, htmlAttributes: new { @class = "control-label col-lg-4 col-md-4 col-sm-12" })
            <div class="col-lg-8 col-md-8 col-sm-12">
                @Html.EditorFor(model => model.ActualHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ActualHours, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-darkblue" />
            <p class="btn btn-default">@Html.ActionLink("Cancel", "List")</p>
        </div>
    </div>
</div>
}

